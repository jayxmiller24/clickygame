{"ast":null,"code":"var _jsxFileName = \"/Users/jaymiller/Desktop/code/Reacthw/reacthw/src/App.js\";\nimport React from 'react';\nimport NavBar from \"./components/NavBar\";\nimport Wrapper from \"./components/Wrapper\";\nimport friends from \"./friends.json\";\nimport Scoreboard from './components/ScoreBoard';\nimport ImgCard from './components/ImgCard';\nimport GameOver from './components/GameOver';\n\nfunction randomChars(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    var _ref = [array[j], array[i]];\n    array[i] = _ref[0];\n    array[j] = _ref[1];\n  }\n\n  return array;\n}\n\nconst shuffleChars = () => {\n  let shuffled = randomChars(friends);\n  this.setState({\n    chars: shuffled\n  });\n};\n\nconst handleClick = name => {\n  if (!this.state.gameover) {\n    if (this.state.selected.indexOf(name) === -1) {\n      this.increment();\n      this.setState({\n        selected: [...this.state.selected, name]\n      });\n    } else {\n      this.setState({\n        msg: 'GAME OVER',\n        gameover: true\n      });\n      this.reset();\n      setTimeout(() => {\n        this.setState({\n          countdown: 3\n        });\n      }, 1000);\n      setTimeout(() => {\n        this.setState({\n          countdown: 2\n        });\n      }, 2000);\n      setTimeout(() => {\n        this.setState({\n          countdown: 1\n        });\n      }, 3000);\n    }\n  } else {\n    this.setState({\n      msg: 'Click any character to begin',\n      selected: [],\n      score: 0,\n      gameover: false\n    });\n  }\n};\n\nconst increment = () => {\n  const newScore = this.state.score + 1;\n  this.setState({\n    score: newScore,\n    msg: 'You guessed correctly!'\n  });\n\n  if (newScore >= this.state.highScore) {\n    this.setState({\n      highScore: newScore\n    });\n  }\n\n  if (newScore === 12) {\n    this.setState({\n      msg: 'You win!',\n      selected: [],\n      gameover: true\n    });\n  }\n\n  this.shuffleChars();\n};\n\nconst reset = () => {\n  setTimeout(() => {\n    this.setState({\n      msg: 'Click any character to begin',\n      score: 0,\n      highScore: this.state.highScore,\n      selected: [],\n      gameover: false,\n      countdown: 3\n    });\n    this.shuffleChars();\n  }, 4000);\n};\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      msg: 'Click any character to begin',\n      score: 0,\n      highScore: 0,\n      friends: friends,\n      selected: [],\n      gameover: false,\n      countdown: ''\n    };\n  }\n\n  render() {\n    if (!this.state.gameover) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Scoreboard, {\n        msg: this.state.msg,\n        score: this.state.score,\n        highScore: this.state.highScore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, this.state.friends.map(friend => React.createElement(ImgCard, {\n        key: friends.id,\n        id: friends.id,\n        name: friends.name,\n        image: friends.image,\n        shuffleChars: this.shuffleChars,\n        handleClick: this.handleClick,\n        increment: this.increment,\n        reset: this.reset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })))));\n    } else {\n      return React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Scoreboard, {\n        msg: this.state.msg,\n        score: this.state.score,\n        highScore: this.state.highScore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(GameOver, {\n        msg: this.props.msg,\n        score: this.state.score,\n        gameover: this.state.gameover,\n        countdown: this.state.countdown,\n        handleClick: this.handleClick,\n        reset: this.reset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      })));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jaymiller/Desktop/code/Reacthw/reacthw/src/App.js"],"names":["React","NavBar","Wrapper","friends","Scoreboard","ImgCard","GameOver","randomChars","array","i","length","j","Math","floor","random","shuffleChars","shuffled","setState","chars","handleClick","name","state","gameover","selected","indexOf","increment","msg","reset","setTimeout","countdown","score","newScore","highScore","App","Component","render","map","friend","id","image","props"],"mappings":"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","sourcesContent":["import React from 'react';\nimport NavBar from \"./components/NavBar\";\nimport Wrapper from \"./components/Wrapper\";\nimport friends from \"./friends.json\";\nimport Scoreboard from './components/ScoreBoard';\nimport ImgCard from './components/ImgCard';\nimport GameOver from './components/GameOver';\n\n\nfunction randomChars(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\n\nconst shuffleChars = () => {\n  let shuffled = randomChars(friends);\n  this.setState({ chars: shuffled });\n}\n\nconst handleClick = (name) => {\n  if (!this.state.gameover) {\n    if (this.state.selected.indexOf(name) === -1) {\n      this.increment();\n      this.setState({ selected: [...this.state.selected, name] });\n    } else {\n      this.setState({ msg: 'GAME OVER', gameover: true })\n      this.reset();\n      setTimeout(() => {\n        this.setState({ countdown: 3 });\n      }, 1000)\n      setTimeout(() => {\n        this.setState({ countdown: 2 });\n      }, 2000)\n      setTimeout(() => {\n        this.setState({ countdown: 1 });\n      }, 3000)\n    }\n  } else {\n    this.setState({\n      msg: 'Click any character to begin',\n      selected: [],\n      score: 0,\n      gameover: false\n    });\n  }\n}\n\nconst increment = () => {\n  const newScore = this.state.score + 1;\n  this.setState({\n    score: newScore,\n    msg: 'You guessed correctly!'\n  });\n  if (newScore >= this.state.highScore) {\n    this.setState({ highScore: newScore });\n  }\n  if (newScore === 12) {\n    this.setState({\n      msg: 'You win!',\n      selected: [],\n      gameover: true\n    });\n  }\n  this.shuffleChars();\n};\n\nconst reset = () => {\n  setTimeout(() => {\n    this.setState({\n      msg: 'Click any character to begin',\n      score: 0,\n      highScore: this.state.highScore,\n      selected: [],\n      gameover: false,\n      countdown: 3\n    });\n    this.shuffleChars()\n  }, 4000);\n}\n\n\nclass App extends React.Component {\n  state = {\n    msg: 'Click any character to begin',\n    score: 0,\n    highScore: 0,\n    friends: friends,\n    selected: [],\n    gameover: false,\n    countdown: '',\n  }\n\n\n\n  render() {\n    if (!this.state.gameover) {\n      return (\n        <div>\n          <NavBar />\n          <Wrapper>\n\n            <Scoreboard\n              msg={this.state.msg}\n              score={this.state.score}\n              highScore={this.state.highScore}\n            />\n            <div className=\"container\">\n              {\n                this.state.friends.map(friend => (\n                  \n                  <ImgCard\n                    key={friends.id}\n                    id={friends.id}\n                    name={friends.name}\n                    image ={friends.image}\n                    shuffleChars={this.shuffleChars}\n                    handleClick={this.handleClick}\n                    increment={this.increment}\n                    reset={this.reset}\n                  />\n                ))\n              }\n            </div>\n          </Wrapper>\n        </div>\n      )\n    } else {\n      return (\n        <Wrapper>\n          <Scoreboard\n            msg={this.state.msg}\n            score={this.state.score}\n            highScore={this.state.highScore}\n          />\n          <div className=\"container\">\n            <GameOver\n              msg={this.props.msg}\n              score={this.state.score}\n              gameover={this.state.gameover}\n              countdown={this.state.countdown}\n              handleClick={this.handleClick}\n              reset={this.reset}\n            />\n          </div>\n        </Wrapper>\n\n      )\n    }\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}