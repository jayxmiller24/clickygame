{"ast":null,"code":"var _jsxFileName = \"/Users/jaymiller/Desktop/code/Reacthw/reacthw/src/App.js\";\nimport React from 'react';\nimport NavBar from \"./components/NavBar\";\nimport Wrapper from \"./components/Wrapper\";\nimport friends from \"./friends.json\";\nimport FriendCard from \"./components/FriendCard\";\n\nfunction randomChars(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    var _ref = [array[j], array[i]];\n    array[i] = _ref[0];\n    array[j] = _ref[1];\n  }\n\n  return array;\n}\n\nstate = {\n  msg: 'Click any character to begin',\n  score: 0,\n  highScore: 0,\n  chars: chars,\n  selected: [],\n  gameover: false,\n  countdown: ''\n};\n\nshuffleChars = () => {\n  let shuffled = randomChars(chars);\n  this.setState({\n    chars: shuffled\n  });\n};\n\nhandleClick = name => {\n  if (!this.state.gameover) {\n    if (this.state.selected.indexOf(name) === -1) {\n      this.increment();\n      this.setState({\n        selected: [...this.state.selected, name]\n      });\n    } else {\n      this.setState({\n        msg: 'GAME OVER',\n        gameover: true\n      });\n      this.reset();\n      setTimeout(() => {\n        this.setState({\n          countdown: 3\n        });\n      }, 1000);\n      setTimeout(() => {\n        this.setState({\n          countdown: 2\n        });\n      }, 2000);\n      setTimeout(() => {\n        this.setState({\n          countdown: 1\n        });\n      }, 3000);\n    }\n  } else {\n    this.setState({\n      msg: 'Click any character to begin',\n      selected: [],\n      score: 0,\n      gameover: false\n    });\n  }\n};\n\nconst increment = () => {\n  const newScore = this.state.score + 1;\n  this.setState({\n    score: newScore,\n    msg: 'You guessed correctly!'\n  });\n\n  if (newScore >= this.state.highScore) {\n    this.setState({\n      highScore: newScore\n    });\n  }\n\n  if (newScore === 12) {\n    this.setState({\n      msg: 'You win!',\n      selected: [],\n      gameover: true\n    });\n  }\n\n  this.shuffleChars();\n};\n\nreset = () => {\n  setTimeout(() => {\n    this.setState({\n      msg: 'Click any character to begin',\n      score: 0,\n      highScore: this.state.highScore,\n      selected: [],\n      gameover: false,\n      countdown: 3\n    });\n    this.shuffleChars();\n  }, 4000);\n};\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      friends\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.state.friends.map(friend => React.createElement(FriendCard, {\n      removeFriend: this.removeFriend,\n      id: friend.id,\n      key: friend.id,\n      name: friend.name,\n      image: friend.image,\n      occupation: friend.occupation,\n      location: friend.location,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), this.state.friends.map(friend => React.createElement(FriendCard, {\n      removeFriend: this.removeFriend,\n      id: friend.id,\n      key: friend.id,\n      name: friend.name,\n      image: friend.image,\n      occupation: friend.occupation,\n      location: friend.location,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jaymiller/Desktop/code/Reacthw/reacthw/src/App.js"],"names":["React","NavBar","Wrapper","friends","FriendCard","randomChars","array","i","length","j","Math","floor","random","state","msg","score","highScore","chars","selected","gameover","countdown","shuffleChars","shuffled","setState","handleClick","name","indexOf","increment","reset","setTimeout","newScore","App","Component","render","map","friend","removeFriend","id","image","occupation","location"],"mappings":"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","sourcesContent":["import React from 'react';\nimport NavBar from \"./components/NavBar\";\nimport Wrapper from \"./components/Wrapper\";\nimport friends from \"./friends.json\";\nimport FriendCard from \"./components/FriendCard\"\n\n\nfunction randomChars(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\nstate = {\n  msg: 'Click any character to begin',\n  score: 0,\n  highScore: 0,\n  chars: chars,\n  selected: [],\n  gameover: false,\n  countdown: '',\n}\n\nshuffleChars = () => {\n  let shuffled = randomChars(chars);\n  this.setState({chars: shuffled});\n}\n\nhandleClick = (name) => {\n  if (!this.state.gameover) {\n    if (this.state.selected.indexOf(name) === -1) {\n      this.increment();\n      this.setState({ selected: [...this.state.selected, name] });\n    } else {\n      this.setState({ msg: 'GAME OVER', gameover: true })\n      this.reset();\n      setTimeout(() => {\n        this.setState({ countdown: 3 });\n      }, 1000)\n      setTimeout(() => {\n        this.setState({ countdown: 2 });\n      }, 2000)\n      setTimeout(() => {\n        this.setState({ countdown: 1 });\n      }, 3000)\n    }\n  } else {\n    this.setState({ \n      msg: 'Click any character to begin', \n      selected: [],\n      score: 0,\n      gameover: false\n    });\n  }\n}\n\n const increment = () => {\n  const newScore = this.state.score + 1;\n  this.setState({\n    score: newScore,\n    msg: 'You guessed correctly!'\n  });\n  if (newScore >= this.state.highScore) {\n    this.setState({ highScore: newScore });\n  }\n  if (newScore === 12) {\n    this.setState({ \n      msg: 'You win!', \n      selected: [],\n      gameover: true\n    });\n  }\n  this.shuffleChars();\n};\n\nreset = () => {\n  setTimeout(() => {  \n  this.setState({\n    msg: 'Click any character to begin',\n    score: 0,\n    highScore: this.state.highScore,\n    selected: [],\n    gameover: false,\n    countdown: 3\n  });\n  this.shuffleChars()\n  }, 4000);\n}\n\n\nclass App extends React.Component {\n  state = {\n    friends\n  };\n\n\n\n  render() {\n    return (\n      <div>\n     <NavBar />\n     \n     <Wrapper>\n        \n\n        {this.state.friends.map(friend => (\n          <FriendCard\n            removeFriend={this.removeFriend}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n          />\n        ))}\n        {this.state.friends.map(friend => (\n          <FriendCard\n            removeFriend={this.removeFriend}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n          />\n        ))}\n\n      </Wrapper>\n      </div>\n\n    )\n\n\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}